Используемый стек:
- python 3.6
- aiohttp
- mariadb

Выбранные механизмы хранения и обработки данных.

Для обеспечения консистентности данных в любой момент времени использовались транзакции с построчной блокировкой.
В случае неуспешной транзакции - ее откат.
При таком подходе данные не смогут быть модифицированы несколькими запросами одновременно; только после завершения транзакции
данные вновь будут доступны для получения/модификации

Механизмы хранения данных стандартны для MariaDB (отдельно не настраивались).
По дефолту для общего хранения данных используется движок InnoDB


Высокую производительность сервиса можно обеспечить за счет скейлинга контейнеров rest (можно использовать
команду docker-compose up --scale, не нужны дополнительные исструменты)


Минусы:
- Нет резервного хранения логов + передачи в logstash
- Нет балансировщика
- Нет повторного вызова метода (если запрос в базу долго стоял в очереди на получение данных)
- База в одном экземпляре
- Ограничение в виде количества возможных коннектов к базе (в пуле максимум 10 коннектов возможно)

Плюсы:
- Простота реализации
- Обеспечение консистентности данных за счет транзакций с построчной блокировкой
- Асинхронная обработка запросов
- Быстрый и удобный скейлинг docker контейнеров
- Портируемость приложения на другие сервера
